#!/bin/bash

######SYSTEM_DEPENDENCIES gnupg

#TODO enable gpg verification based on different gpg versions
#return 0

brdexec_verify_script_signature__brdexec_before_script_manipulation () {

  local BRDEXEC_TEMP_OUTPUT

  ### import public gpg keys
  if [ -d etc/gpg_pubkeys ]; then
    if BRDEXEC_TEMP_OUTPUT="$(find etc/gpg_pubkeys/ -name '*.gpg' | tr '\n' ' ')"; [ ! -z "${BRDEXEC_TEMP_OUTPUT}" ]; then
      if [ "${BRDEXEC_INSTALLED_NOW}" = "yes" ]; then
        brdexec_display_output "  Importing GPG signature keys" 1
      fi
      ### no quotes after gpg --import, otherwise importing of more than one file fails
      gpg --import ${BRDEXEC_TEMP_OUTPUT} >/dev/null 2>&1
      if [ "$?" -ne 0 ]; then
        display_error "462" 1
      fi
    else
      ### there are no keys provided
      display_error "461" 1
    fi
  else
    ### folder with keys does not exist
    display_error "460" 1
  fi

  if [ -f "${BRDEXEC_SCRIPT_TO_RUN}.sig" ] && [ -f "${BRDEXEC_SCRIPT_TO_RUN}" ]; then
    gpg --verify ${BRDEXEC_SCRIPT_TO_RUN}.sig ${BRDEXEC_SCRIPT_TO_RUN} >/dev/null 2>&1
    if [ "$?" -ne 0 ]; then
      display_error "113" 1
    fi
  else
    display_error "114" 1
  fi

#  ### check script file signature
#  ### check for custom hash
#  BRDEXEC_SCRIPT_CUSTOM_HASH="$(grep ^#hsh ${BRDEXEC_SCRIPT_TO_RUN} | awk '{print $2}')"
#  BRDEXEC_SCRIPT_CUSTOM_HASH_VERIFIED="no"
#  if [ -f etc/hush ]; then
#    while read BRDEXEC_SCRIPT_CUSTOM_HASH_ITEM
#    do
#      if [ "$(echo "${BRDEXEC_SCRIPT_CUSTOM_HASH_ITEM}" | grep ^hsh | awk '{print $2}')" = "${BRDEXEC_SCRIPT_CUSTOM_HASH}" ]; then
#        if [ "${BRDEXEC_SCRIPT_CUSTOM_HASH}" != "" 2>/dev/null ]; then
#          BRDEXEC_SCRIPT_CUSTOM_HASH_VERIFIED=yes
#        fi
#      fi
#    done < etc/hush
#    if [ "${BRDEXEC_SCRIPT_CUSTOM_HASH_VERIFIED}" = "no" ]; then
#      gpg --verify "${1}.asc" "${1}" 2>/dev/null
#      if [ "$?" -ne 0 ]; then
#        display_error "113" 1
#      fi
#      limit_file_size -m 1 etc/hush
#      BRDEXEC_SCRIPT_SIGNATURE_ID="$(gpg --verify "${1}.asc" "${1}" 2>&1 | grep ID | awk -F " key ID " '{print $2}')"
#      if [ ! -z "${BRDEXEC_SCRIPT_SIGNATURE_ID}" ]; then
#        if [ "$(grep "^gpg " etc/hush | grep -c "${BRDEXEC_SCRIPT_SIGNATURE_ID}")" -eq 0 ]; then
#          display_error "114" 1
#        fi
#      else
#        display_error "114" 1
#      fi
#    fi
#  else
#    display_error "114" 1
#  fi
}
